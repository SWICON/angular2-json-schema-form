{"version":3,"sources":["../../lib/src/json-schema-form.service.ts"],"names":[],"mappings":"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","file":"json-schema-form.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport * as Ajv from 'ajv';\r\nimport * as _ from 'lodash/index';\r\n\r\nimport { convertJsonSchemaToDraft6 } from './shared/convert-json-schema.functions';\r\nimport {\r\n  hasValue, isArray, isDefined, isObject, isString\r\n} from './shared/validator.functions';\r\nimport { hasOwn, parseText } from './shared/utility.functions';\r\nimport { JsonPointer } from './shared/jsonpointer.functions';\r\nimport {\r\n  buildSchemaFromData, buildSchemaFromLayout, getSchemaReference\r\n} from './shared/json-schema.functions';\r\nimport {\r\n  buildFormGroup, buildFormGroupTemplate, fixJsonFormOptions, formatFormData, getControl\r\n} from './shared/form-group.functions';\r\nimport { buildLayout } from './shared/layout.functions';\r\n\r\nexport type CheckboxItem = { name: string, value: any, checked?: boolean };\nexport class JsonSchemaFormService {\r\n  JsonFormCompatibility: boolean = false;\r\n  ReactJsonSchemaFormCompatibility: boolean = false;\r\n  AngularSchemaFormCompatibility: boolean = false;\r\n  tpldata: any = {};\r\n\r\n  ajvOptions: any = { allErrors: true, unknownFormats: 'ignore' };\r\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\r\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\r\n\r\n  initialValues: any = {}; // The initial data model (e.g. previously submitted data)\r\n  schema: any = {}; // The internal JSON Schema\r\n  layout: any[] = []; // The internal Form layout\r\n  formGroupTemplate: any = {}; // The template used to create formGroup\r\n  formGroup: any = null; // The Angular formGroup, which powers the reactive form\r\n  framework: any = null; // The active framework component\r\n\r\n  data: any = {}; // Form data, formatted with correct data types\r\n  validData: any = null; // Valid form data (or null)\r\n  isValid: boolean = null; // Is current form data valid?\r\n  validationErrors: any = null; // Any validation errors for current data\r\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\r\n  dataChanges: Subject<any> = new Subject(); // Form data observable\r\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\r\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\r\n\r\n  arrayMap: Map<string, number> = new Map<string, number>(); // Maps arrays in data object and number of tuple values\r\n  dataMap: Map<string, any> = new Map<string, any>(); // Maps paths in data model to schema and formGroup paths\r\n  dataRecursiveRefMap: Map<string, string> = new Map<string, string>(); // Maps recursive reference points in data model\r\n  schemaRecursiveRefMap: Map<string, string> = new Map<string, string>(); // Maps recursive reference points in schema\r\n  layoutRefLibrary: any = {}; // Library of layout nodes for adding to form\r\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\r\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\r\n\r\n  // Default global form options\r\n  globalOptionDefaults: any = {\r\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\r\n      // for addSubmit: true = always, false = never,\r\n      // 'auto' = only if layout is undefined (form is built from schema alone)\r\n    debug: false, // Show debugging output?\r\n    fieldsRequired: false, // Are there any required fields in the form?\r\n    framework: 'material-design', // The framework to load\r\n    widgets: {}, // Any custom widgets to load\r\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\r\n    pristine: { errors: true, success: true },\r\n    supressPropertyTitles: false,\r\n    setSchemaDefaults: true,\r\n    validateOnRender: false,\r\n    formDefaults: { // Default options for form controls\r\n      addable: true, // Allow adding items to an array or $ref point?\r\n      orderable: true, // Allow reordering items within an array?\r\n      removable: true, // Allow removing items from an array or $ref point?\r\n      allowExponents: false, // Allow exponent entry in number fields?\r\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\r\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\r\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\r\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\r\n      feedback: false, // Show inline feedback icons?\r\n      feedbackOnRender: false, // Show errorMessage on Render?\r\n      notitle: false, // Hide title?\r\n      readonly: false, // Set control as read only?\r\n      returnEmptyFields: true, // return values for fields that contain no data?\r\n    },\r\n  };\r\n  globalOptions: any;\nconstructor() {\r\n    this.globalOptions = _.cloneDeep(this.globalOptionDefaults);\r\n  }\n/**\n * @return {?}\n */\ngetData() { return this.data; }\n/**\n * @return {?}\n */\ngetSchema() { return this.schema; }\n/**\n * @return {?}\n */\ngetLayout() { return this.layout; }\n/**\n * @return {?}\n */\nresetAllValues() {\r\n    this.JsonFormCompatibility = false;\r\n    this.ReactJsonSchemaFormCompatibility = false;\r\n    this.AngularSchemaFormCompatibility = false;\r\n    this.tpldata = {};\r\n    this.validateFormData = null;\r\n    this.initialValues = {};\r\n    this.schema = {};\r\n    this.layout = [];\r\n    this.formGroupTemplate = {};\r\n    this.formGroup = null;\r\n    this.framework = null;\r\n    this.data = {};\r\n    this.validData = null;\r\n    this.isValid = null;\r\n    this.validationErrors = null;\r\n    this.arrayMap = new Map<string, number>();\r\n    this.dataMap = new Map<string, any>();\r\n    this.dataRecursiveRefMap = new Map<string, string>();\r\n    this.schemaRecursiveRefMap = new Map<string, string>();\r\n    this.layoutRefLibrary = {};\r\n    this.schemaRefLibrary = {};\r\n    this.templateRefLibrary = {};\r\n    this.globalOptions = _.cloneDeep(this.globalOptionDefaults);\r\n  }\n/**\n * @return {?}\n */\nconvertJsonSchemaToDraft6() {\r\n    this.schema = convertJsonSchemaToDraft6(this.schema);\r\n  }\n/**\n * @param {?} layout\n * @return {?}\n */\nfixJsonFormOptions(layout: any): any {\r\n    return fixJsonFormOptions(layout);\r\n  }\n/**\n * @param {?=} setValues\n * @return {?}\n */\nbuildFormGroupTemplate(setValues: boolean = true) {\r\n    this.formGroupTemplate =\r\n      buildFormGroupTemplate(this, this.initialValues, setValues);\r\n  }\n/**\n * @param {?} newValue\n * @param {?=} updateSubscriptions\n * @return {?}\n */\nvalidateData(newValue: any, updateSubscriptions: boolean = true): void {\r\n\r\n    // Format raw form data to correct data types\r\n    this.data = formatFormData(\r\n      newValue, this.dataMap, this.dataRecursiveRefMap,\r\n      this.arrayMap, this.globalOptions.returnEmptyFields\r\n    );\r\n    this.isValid = this.validateFormData(this.data);\r\n    this.validData = this.isValid ? this.data : null;\r\n    this.validationErrors = this.validateFormData.errors;\r\n    if (updateSubscriptions) {\r\n      if (this.dataChanges.observers.length) {\r\n        this.dataChanges.next(this.data);\r\n      }\r\n      if (this.isValidChanges.observers.length) {\r\n        this.isValidChanges.next(this.isValid);\r\n      }\r\n      if (this.validationErrorChanges.observers.length) {\r\n        this.validationErrorChanges.next(this.validationErrors);\r\n      }\r\n    }\r\n  }\n/**\n * @return {?}\n */\nbuildFormGroup() {\r\n    this.formGroup = /** @type {?} */(( <FormGroup>buildFormGroup(this.formGroupTemplate)));\r\n    if (this.formGroup) {\r\n      this.compileAjvSchema();\r\n      this.validateData(this.formGroup.value, false);\r\n\r\n      // Set up observables to emit data and validation info when form data changes\r\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\r\n      this.formValueSubscription = this.formGroup.valueChanges.subscribe(\r\n        formValue => this.validateData(formValue)\r\n      );\r\n    }\r\n  }\n/**\n * @param {?} widgetLibrary\n * @return {?}\n */\nbuildLayout(widgetLibrary: any) {\r\n    this.layout = buildLayout(this, widgetLibrary);\r\n  }\n/**\n * @param {?} newOptions\n * @return {?}\n */\nsetOptions(newOptions: any): void {\r\n    if (typeof newOptions === 'object') {\r\n      Object.assign(this.globalOptions, newOptions);\r\n    }\r\n    if (hasOwn(this.globalOptions.formDefaults, 'disableErrorState')) {\r\n      this.globalOptions.formDefaults.enableErrorState =\r\n        !this.globalOptions.formDefaults.disableErrorState;\r\n      delete this.globalOptions.formDefaults.disableErrorState;\r\n    }\r\n    if (hasOwn(this.globalOptions.formDefaults, 'disableSuccessState')) {\r\n      this.globalOptions.formDefaults.enableSuccessState =\r\n        !this.globalOptions.formDefaults.disableSuccessState;\r\n      delete this.globalOptions.formDefaults.disableSuccessState;\r\n    }\r\n  }\n/**\n * @return {?}\n */\ncompileAjvSchema() {\r\n    if (!this.validateFormData) {\r\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\r\n      if (Array.isArray(this.schema.properties['ui:order'])) {\r\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\r\n        delete this.schema.properties['ui:order'];\r\n      }\r\n      this.validateFormData = this.ajv.compile(this.schema);\r\n    }\r\n  }\n/**\n * @return {?}\n */\nresolveSchemaRefLinks() {\r\n\r\n    // Search schema for $ref links\r\n    JsonPointer.forEachDeep(this.schema, (value, pointer) => {\r\n      if (hasOwn(value, '$ref') && isString(value['$ref'])) {\r\n        const /** @type {?} */ newReference: string = JsonPointer.compile(value['$ref']);\r\n        const /** @type {?} */ isRecursive: boolean = JsonPointer.isSubPointer(newReference, pointer);\r\n\r\n        // Save new target schemas in schemaRefLibrary\r\n        if (hasValue(newReference) && !hasOwn(this.schemaRefLibrary, newReference)) {\r\n          this.schemaRefLibrary[newReference] = getSchemaReference(\r\n            this.schema, newReference, this.schemaRefLibrary\r\n          );\r\n        }\r\n\r\n        // Save link in schemaRecursiveRefMap\r\n        if (!this.schemaRecursiveRefMap.has(pointer)) {\r\n          this.schemaRecursiveRefMap.set(pointer, newReference);\r\n        }\r\n\r\n        // If a $ref link is not recursive,\r\n        // remove link and replace with copy of target schema\r\n        if (!isRecursive) {\r\n          delete value['$ref'];\r\n          const /** @type {?} */ targetSchema: any = Object.assign(\r\n            _.cloneDeep(this.schemaRefLibrary[newReference]), value\r\n          );\r\n          this.schema = JsonPointer.set(this.schema, pointer, targetSchema);\r\n\r\n          // Save partial link in schemaRecursiveRefMap,\r\n          // so it can be matched later if it is recursive\r\n          this.schemaRecursiveRefMap.set(newReference, pointer);\r\n        } else {\r\n\r\n          // If a matching partial link exists, complete it\r\n          const /** @type {?} */ mappedReference: string = this.schemaRecursiveRefMap.get(newReference);\r\n          if (this.schemaRecursiveRefMap.has(newReference) &&\r\n            JsonPointer.isSubPointer(mappedReference, newReference)\r\n          ) {\r\n            this.schemaRecursiveRefMap.set(newReference, mappedReference);\r\n          }\r\n        }\r\n      }\r\n    }, true);\r\n\r\n    // Add redirects for links to shared schemas (such as definitions)\r\n    let /** @type {?} */ addRedirects: Map<string, string> = new Map<string, string>();\r\n    this.schemaRecursiveRefMap.forEach((toRef1, fromRef1) =>\r\n      this.schemaRecursiveRefMap.forEach((toRef2, fromRef2) => {\r\n        if (fromRef1 !== fromRef2 && fromRef1 !== toRef2 &&\r\n          JsonPointer.isSubPointer(toRef2, fromRef1)\r\n        ) {\r\n          const /** @type {?} */ newRef: string = fromRef2 + fromRef1.slice(toRef2.length);\r\n          if (!this.schemaRecursiveRefMap.has(newRef)) {\r\n            addRedirects.set(newRef, toRef1);\r\n          }\r\n        }\r\n      })\r\n    );\r\n    addRedirects.forEach((toRef, fromRef) => this.schemaRecursiveRefMap.set(fromRef, toRef));\r\n\r\n    // Fix recursive references pointing to shared schemas\r\n    this.schemaRecursiveRefMap.forEach((toRef1, fromRef1) =>\r\n      this.schemaRecursiveRefMap.forEach((toRef2, fromRef2) => {\r\n        if (fromRef1 !== fromRef2 && toRef1 === toRef2 &&\r\n          JsonPointer.isSubPointer(fromRef1, fromRef2)\r\n        ) {\r\n          this.schemaRecursiveRefMap.set(fromRef2, fromRef1);\r\n        }\r\n      })\r\n    );\r\n\r\n    // Remove unmatched (non-recursive) partial links\r\n    this.schemaRecursiveRefMap.forEach((toRef, fromRef) => {\r\n      if (!JsonPointer.isSubPointer(toRef, fromRef) &&\r\n        !hasOwn(this.schemaRefLibrary, toRef)\r\n      ) {\r\n        this.schemaRecursiveRefMap.delete(fromRef);\r\n      }\r\n    });\r\n\r\n    // // TODO: Create dataRecursiveRefMap from schemaRecursiveRefMap\r\n    // this.schemaRecursiveRefMap.forEach((toRef, fromRef) => {\r\n    //   this.dataRecursiveRefMap.set(\r\n    //     JsonPointer.toDataPointer(fromRef, this.schema),\r\n    //     JsonPointer.toDataPointer(toRef, this.schema)\r\n    //   );\r\n    // });\r\n  }\n/**\n * @param {?=} data\n * @param {?=} requireAllFields\n * @return {?}\n */\nbuildSchemaFromData(data?: any, requireAllFields: boolean = false): any {\r\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\r\n    this.schema = buildSchemaFromData(this.initialValues, requireAllFields);\r\n  }\n/**\n * @param {?=} layout\n * @return {?}\n */\nbuildSchemaFromLayout(layout?: any): any {\r\n    if (layout) { return buildSchemaFromLayout(layout); }\r\n    this.schema = buildSchemaFromLayout(this.layout);\r\n  }\n/**\n * @param {?=} newTpldata\n * @return {?}\n */\nsetTpldata(newTpldata: any = {}): void {\r\n    this.tpldata = newTpldata;\r\n  }\n/**\n * @param {?=} text\n * @param {?=} value\n * @param {?=} values\n * @param {?=} key\n * @return {?}\n */\nparseText(\r\n    text: string = '', value: any = {}, values: any = {}, key: number|string = null\r\n  ): string {\r\n    return parseText(text, value, values, key, this.tpldata);\r\n  }\n/**\n * @param {?=} parentCtx\n * @param {?=} childNode\n * @param {?=} index\n * @return {?}\n */\nsetTitle(\r\n    parentCtx: any = {}, childNode: any = null, index: number = null\r\n  ): string {\r\n    const /** @type {?} */ parentNode: any = parentCtx.layoutNode;\r\n    let /** @type {?} */ text: string;\r\n    let /** @type {?} */ childValue: any;\r\n    let /** @type {?} */ parentValues: any = this.getControlValue(parentCtx);\r\n    const /** @type {?} */ isArrayItem: boolean =\r\n      parentNode.type.slice(-5) === 'array' && isArray(parentValues);\r\n    if (isArrayItem && childNode.type !== '$ref') {\r\n      text = JsonPointer.getFirst([\r\n        [childNode, '/options/legend'],\r\n        [childNode, '/options/title'],\r\n        [childNode, '/title'],\r\n        [parentNode, '/options/title'],\r\n        [parentNode, '/options/legend'],\r\n        [parentNode, '/title'],\r\n      ]);\r\n    } else {\r\n      text = JsonPointer.getFirst([\r\n        [childNode, '/title'],\r\n        [childNode, '/options/title'],\r\n        [childNode, '/options/legend'],\r\n        [parentNode, '/title'],\r\n        [parentNode, '/options/title'],\r\n        [parentNode, '/options/legend']\r\n      ]);\r\n      if (childNode.type === '$ref') { text = '+ ' + text; }\r\n    }\r\n    if (!text) { return text; }\r\n    childValue = isArrayItem ? parentValues[index] : parentValues;\r\n    return this.parseText(text, childValue, parentValues, index);\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ninitializeControl(ctx: any): boolean {\r\n    ctx.formControl = this.getControl(ctx);\r\n    ctx.boundControl = !!ctx.formControl;\r\n    if (ctx.boundControl) {\r\n      ctx.controlName = this.getControlName(ctx);\r\n      ctx.controlValue = ctx.formControl.value;\r\n      ctx.formControl.valueChanges.subscribe(v => ctx.controlValue = v);\r\n      ctx.controlDisabled = ctx.formControl.disabled;\r\n      // TODO: subscribe to status changes\r\n      // TODO: emit / display error messages\r\n      // ctx.formControl.statusChanges.subscribe(v => ...);\r\n    } else {\r\n      ctx.controlName = ctx.layoutNode.name;\r\n      ctx.controlValue = ctx.layoutNode.value;\r\n      const /** @type {?} */ dataPointer = this.getDataPointer(ctx);\r\n      if (dataPointer) {\r\n        console.error('warning: control \"' + dataPointer +\r\n          '\" is not bound to the Angular FormGroup.');\r\n      }\r\n    }\r\n    return ctx.boundControl;\r\n  }\n/**\n * @param {?} ctx\n * @param {?} value\n * @return {?}\n */\nupdateValue(ctx: any, value): void {\r\n\r\n    // Set value of current control\r\n    ctx.controlValue = value;\r\n    if (ctx.boundControl) {\r\n      ctx.formControl.setValue(value);\r\n      ctx.formControl.markAsDirty();\r\n    }\r\n    ctx.layoutNode.value = value;\r\n\r\n    // Set values of any related controls in copyValueTo array\r\n    if (isArray(ctx.options.copyValueTo)) {\r\n      for (let /** @type {?} */ item of ctx.options.copyValueTo) {\r\n        let /** @type {?} */ targetControl = getControl(this.formGroup, item);\r\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\r\n          targetControl.setValue(value);\r\n          targetControl.markAsDirty();\r\n        }\r\n      }\r\n    }\r\n  }\n/**\n * @param {?} ctx\n * @param {?} checkboxList\n * @return {?}\n */\nupdateArrayCheckboxList(ctx: any, checkboxList: CheckboxItem[]): void {\r\n    let /** @type {?} */ formArray = /** @type {?} */(( <FormArray>this.getControl(ctx)));\r\n\r\n    // Remove all existing items\r\n    while (formArray.value.length) { formArray.removeAt(0); }\r\n\r\n    // Re-add an item for each checked box\r\n    for (let /** @type {?} */ checkboxItem of checkboxList) {\r\n      if (checkboxItem.checked) {\r\n        let /** @type {?} */ newFormControl = buildFormGroup(JsonPointer.get(\r\n          this.templateRefLibrary, [ctx.layoutNode.dataPointer + '/-']\r\n        ));\r\n        newFormControl.setValue(checkboxItem.value);\r\n        formArray.push(newFormControl);\r\n      }\r\n    }\r\n    formArray.markAsDirty();\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetControl(ctx: any): AbstractControl {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer ||\r\n      ctx.layoutNode.type === '$ref') { return null; }\r\n    return getControl(this.formGroup, this.getDataPointer(ctx));\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetControlValue(ctx: any): AbstractControl {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer ||\r\n      ctx.layoutNode.type === '$ref') { return null; }\r\n    const /** @type {?} */ control = getControl(this.formGroup, this.getDataPointer(ctx));\r\n    return control ? control.value : null;\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetControlGroup(ctx: any): FormArray | FormGroup {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer) { return null; }\r\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetControlName(ctx: any): string {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer || !ctx.dataIndex) { return null; }\r\n    return JsonPointer.toKey(this.getDataPointer(ctx));\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetLayoutArray(ctx: any): any[] {\r\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetParentNode(ctx: any): any[] {\r\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetDataPointer(ctx: any): string {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer || !ctx.dataIndex) { return null; }\r\n    return JsonPointer.toIndexedPointer(ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap);\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\ngetLayoutPointer(ctx: any): string {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.layoutPointer || !ctx.layoutIndex) { return null; }\r\n    return JsonPointer.toIndexedPointer(ctx.layoutNode.layoutPointer, ctx.layoutIndex);\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\nisControlBound(ctx: any): boolean {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer || !ctx.dataIndex) { return false; }\r\n    const /** @type {?} */ controlGroup = this.getControlGroup(ctx);\r\n    const /** @type {?} */ name = this.getControlName(ctx);\r\n    return controlGroup ? controlGroup.controls.hasOwnProperty(name) : false;\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\naddItem(ctx: any): boolean {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.$ref || !ctx.dataIndex ||\r\n      !ctx.layoutNode.layoutPointer || !ctx.layoutIndex) { return false; }\r\n\r\n    // Create a new Angular form control from a template in templateRefLibrary\r\n    const /** @type {?} */ newFormGroup = buildFormGroup(JsonPointer.get(\r\n      this.templateRefLibrary, [ctx.layoutNode.$ref]\r\n    ));\r\n\r\n    // Add the new form control to the parent formArray or formGroup\r\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\r\n      ( /** @type {?} */((<FormArray>this.getControlGroup(ctx))))\r\n        .push(newFormGroup);\r\n    } else { // Add new $ref item to formGroup\r\n      ( /** @type {?} */((<FormGroup>this.getControlGroup(ctx))))\r\n        .addControl(this.getControlName(ctx), newFormGroup);\r\n    }\r\n\r\n    // Copy a new layoutNode from layoutRefLibrary\r\n    const /** @type {?} */ newLayoutNode = _.cloneDeep(JsonPointer.get(\r\n      this.layoutRefLibrary, [ctx.layoutNode.$ref]\r\n    ));\r\n\r\n    JsonPointer.forEachDeep(newLayoutNode, (value, pointer) => {\r\n\r\n      // Reset all _id's in newLayoutNode to unique values\r\n      if (hasOwn(value, '_id')) { value._id = _.uniqueId(); }\r\n\r\n      // If adding a recursive item, prefix current dataPointer\r\n      // and layoutPointer to all pointers in new layoutNode\r\n      if (!ctx.layoutNode.arrayItem || ctx.layoutNode.recursiveReference) {\r\n        if (hasOwn(value, 'dataPointer')) {\r\n          value.dataPointer = ctx.layoutNode.dataPointer + value.dataPointer;\r\n        }\r\n        if (hasOwn(value, 'layoutPointer')) {\r\n          value.layoutPointer =\r\n            ctx.layoutNode.layoutPointer.slice(0, -2) + value.layoutPointer;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Add the new layoutNode to the layout\r\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\r\n    return true;\r\n  }\n/**\n * @param {?} ctx\n * @param {?} oldIndex\n * @param {?} newIndex\n * @return {?}\n */\nmoveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer || !ctx.dataIndex ||\r\n      !ctx.layoutNode.layoutPointer || !ctx.layoutIndex ||\r\n      !isDefined(oldIndex) || !isDefined(newIndex)) { return false; }\r\n\r\n    // Move item in the formArray\r\n    let /** @type {?} */ formArray = /** @type {?} */(( <FormArray>this.getControlGroup(ctx)));\r\n    formArray.controls.splice(newIndex, 0, // add to new index\r\n      formArray.controls.splice(oldIndex, 1)[0] // remove from old index\r\n    );\r\n    formArray.updateValueAndValidity();\r\n    ( /** @type {?} */((<any>formArray)))._onCollectionChange();\r\n\r\n    // Move layout item\r\n    let /** @type {?} */ layoutArray = this.getLayoutArray(ctx);\r\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\r\n    return true;\r\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\nremoveItem(ctx: any): boolean {\r\n    if (!ctx.layoutNode || !ctx.layoutNode.dataPointer || !ctx.dataIndex ||\r\n      !ctx.layoutNode.layoutPointer || !ctx.layoutIndex) { return false; }\r\n\r\n    // Remove the Angular form control from the parent formArray or formGroup\r\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\r\n      ( /** @type {?} */((<FormArray>this.getControlGroup(ctx))))\r\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\r\n    } else { // Remove $ref item from formGroup\r\n      ( /** @type {?} */((<FormGroup>this.getControlGroup(ctx))))\r\n        .removeControl(this.getControlName(ctx));\r\n    }\r\n\r\n    // Remove layoutNode from layout\r\n    let /** @type {?} */ layoutPointer = this.getLayoutPointer(ctx);\r\n    JsonPointer.remove(this.layout, layoutPointer);\r\n    return true;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonSchemaFormService_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonSchemaFormService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonSchemaFormService.ctorParameters;\n/** @type {?} */\nJsonSchemaFormService.prototype.JsonFormCompatibility;\n/** @type {?} */\nJsonSchemaFormService.prototype.ReactJsonSchemaFormCompatibility;\n/** @type {?} */\nJsonSchemaFormService.prototype.AngularSchemaFormCompatibility;\n/** @type {?} */\nJsonSchemaFormService.prototype.tpldata;\n/** @type {?} */\nJsonSchemaFormService.prototype.ajvOptions;\n/** @type {?} */\nJsonSchemaFormService.prototype.ajv;\n/** @type {?} */\nJsonSchemaFormService.prototype.validateFormData;\n/** @type {?} */\nJsonSchemaFormService.prototype.initialValues;\n/** @type {?} */\nJsonSchemaFormService.prototype.schema;\n/** @type {?} */\nJsonSchemaFormService.prototype.layout;\n/** @type {?} */\nJsonSchemaFormService.prototype.formGroupTemplate;\n/** @type {?} */\nJsonSchemaFormService.prototype.formGroup;\n/** @type {?} */\nJsonSchemaFormService.prototype.framework;\n/** @type {?} */\nJsonSchemaFormService.prototype.data;\n/** @type {?} */\nJsonSchemaFormService.prototype.validData;\n/** @type {?} */\nJsonSchemaFormService.prototype.isValid;\n/** @type {?} */\nJsonSchemaFormService.prototype.validationErrors;\n/** @type {?} */\nJsonSchemaFormService.prototype.formValueSubscription;\n/** @type {?} */\nJsonSchemaFormService.prototype.dataChanges;\n/** @type {?} */\nJsonSchemaFormService.prototype.isValidChanges;\n/** @type {?} */\nJsonSchemaFormService.prototype.validationErrorChanges;\n/** @type {?} */\nJsonSchemaFormService.prototype.arrayMap;\n/** @type {?} */\nJsonSchemaFormService.prototype.dataMap;\n/** @type {?} */\nJsonSchemaFormService.prototype.dataRecursiveRefMap;\n/** @type {?} */\nJsonSchemaFormService.prototype.schemaRecursiveRefMap;\n/** @type {?} */\nJsonSchemaFormService.prototype.layoutRefLibrary;\n/** @type {?} */\nJsonSchemaFormService.prototype.schemaRefLibrary;\n/** @type {?} */\nJsonSchemaFormService.prototype.templateRefLibrary;\n/** @type {?} */\nJsonSchemaFormService.prototype.globalOptionDefaults;\n/** @type {?} */\nJsonSchemaFormService.prototype.globalOptions;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}