{"version":3,"sources":["../../../lib/src/widget-library/widget-library.service.ts"],"names":[],"mappings":"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","file":"widget-library.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { AddReferenceComponent } from './add-reference.component';\r\nimport { ButtonComponent } from './button.component';\r\nimport { CheckboxComponent } from './checkbox.component';\r\nimport { CheckboxesComponent } from './checkboxes.component';\r\nimport { FileComponent } from './file.component';\r\nimport { HiddenComponent } from './hidden.component';\r\nimport { InputComponent } from './input.component';\r\nimport { MessageComponent } from './message.component';\r\nimport { NoneComponent } from './none.component';\r\nimport { NumberComponent } from './number.component';\r\nimport { RadiosComponent } from './radios.component';\r\nimport { RootComponent } from './root.component';\r\nimport { SectionComponent } from './section.component';\r\nimport { SelectComponent } from './select.component';\r\nimport { SelectFrameworkComponent } from './select-framework.component';\r\nimport { SelectWidgetComponent } from './select-widget.component';\r\nimport { SubmitComponent } from './submit.component';\r\nimport { TabComponent } from './tab.component';\r\nimport { TabsComponent } from './tabs.component';\r\nimport { TemplateComponent } from './template.component';\r\nimport { TextareaComponent } from './textarea.component';\nexport class WidgetLibraryService {\r\n\r\n  defaultWidget: string = 'none';\r\n  widgetLibrary: any = {\r\n\r\n  // Angular JSON Schema Form administrative widgets\r\n    'none': NoneComponent, // Placeholder, for development - displays nothing\r\n    'root': RootComponent, // Form root, renders a complete layout\r\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\r\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\r\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\r\n\r\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\r\n    'email': 'text',\r\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\r\n    'number': NumberComponent,\r\n    'password': 'text',\r\n    'search': 'text',\r\n    'tel': 'text',\r\n    'text': InputComponent,\r\n    'url': 'text',\r\n\r\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\r\n    'color': 'text',\r\n    'date': 'text',\r\n    'datetime': 'text',\r\n    'datetime-local': 'text',\r\n    'month': 'text',\r\n    'range': 'number',\r\n    'time': 'text',\r\n    'week': 'text',\r\n\r\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\r\n    // 'button': <input type=\"button\"> not used, use <button> instead\r\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\r\n    'file': FileComponent, // TODO: Figure out how to handle these\r\n    'hidden': 'text',\r\n    'image': 'text', // TODO: Figure out how to handle these\r\n    'radio': 'radios',\r\n    'reset': 'submit', // TODO: Figure out how to handle these\r\n    'submit': SubmitComponent,\r\n\r\n  // Other (non-'input') HTML form control widgets\r\n    'button': ButtonComponent,\r\n    'select': SelectComponent,\r\n    // 'optgroup': TODO: automatically generated by select widgets (how?)\r\n    // 'option': automatically generated by select widgets\r\n    'textarea': TextareaComponent,\r\n\r\n  // HTML form control widget sets\r\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\r\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\r\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\r\n    'radios': RadiosComponent, // Grouped list of radio buttons\r\n    'radios-inline': 'radios', // Radio controls in one line\r\n    'radiobuttons': 'radios', // Radio controls as html buttons\r\n\r\n  // HTML Layout widgets\r\n    // 'label': automatically added to data widgets\r\n    // 'legend': automatically added to fieldsets\r\n    'section': SectionComponent, // Just a div <div>\r\n    'div': 'section', // Still just a div <div>\r\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\r\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\r\n\r\n  // Non-HTML layout widgets\r\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\r\n    'tabarray': 'tabs', // A tabbed version of array\r\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\r\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\r\n    'message': MessageComponent, // Insert arbitrary html\r\n    'help': 'message', // Insert arbitrary html\r\n    'msg': 'message', // Insert arbitrary html\r\n    'html': 'message', // Insert arbitrary html\r\n    'template': TemplateComponent, // Insert a custom Angular component\r\n\r\n  // Widgets included for compatibility with JSON Form API\r\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\r\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\r\n    'optionfieldset': 'section', // Option control, displays selected sub-item <fieldset>\r\n    'selectfieldset': 'section', // Select control, displays selected sub-item <fieldset>\r\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\r\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\r\n    'tagsinput': 'section', // For entering short text tags <div>\r\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\r\n\r\n  // Widgets included for compatibility with React JSON Schema Form API\r\n    'updown': 'number',\r\n    'date-time': 'text',\r\n    'alt-datetime': 'text',\r\n    'alt-date': 'text',\r\n\r\n  // Widgets included for compatibility with Angular Schema Form API\r\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\r\n\r\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\r\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\r\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\r\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\r\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\r\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\r\n    // 'ace': ACE code editor - https://ace.c9.io\r\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\r\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\r\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\r\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\r\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\r\n  };\r\n  registeredWidgets: any = { };\r\n  frameworkWidgets: any = { };\r\n  activeWidgets: any = { };\nconstructor() {\r\n    this.setActiveWidgets();\r\n  }\n/**\n * @return {?}\n */\nsetActiveWidgets() {\r\n    this.activeWidgets = Object.assign(\r\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\r\n    );\r\n    for (let /** @type {?} */ widgetName of Object.keys(this.activeWidgets)) {\r\n      let /** @type {?} */ widget: any = this.activeWidgets[widgetName];\r\n      // Resolve aliases\r\n      if (typeof widget === 'string') {\r\n        let /** @type {?} */ usedAliases: string[] = [];\r\n        while (typeof widget === 'string' && usedAliases.indexOf(widget) === -1) {\r\n          usedAliases.push(widget);\r\n          widget = this.activeWidgets[widget];\r\n        }\r\n        if (typeof widget !== 'string') {\r\n          this.activeWidgets[widgetName] = widget;\r\n        }\r\n      }\r\n    }\r\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nsetDefaultWidget(type: string): boolean {\r\n    if (!this.hasWidget(type)) { return false; }\r\n    this.defaultWidget = type;\r\n    return true;\r\n  }\n/**\n * @param {?} type\n * @param {?=} widgetSet\n * @return {?}\n */\nhasWidget(type: string, widgetSet: string = 'activeWidgets'): boolean {\r\n    if (!type || typeof type !== 'string') { return false; }\r\n    return this[widgetSet].hasOwnProperty(type);\r\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nhasDefaultWidget(type: string): boolean {\r\n    return this.hasWidget(type, 'widgetLibrary');\r\n  }\n/**\n * @param {?} type\n * @param {?} widget\n * @return {?}\n */\nregisterWidget(type: string, widget: any): boolean {\r\n    if (!type || !widget || typeof type !== 'string') { return false; }\r\n    this.registeredWidgets[type] = widget;\r\n    this.setActiveWidgets();\r\n    return true;\r\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nunRegisterWidget(type: string): boolean {\r\n    if (!type || typeof type !== 'string' ||\r\n      !this.registeredWidgets.hasOwnProperty(type)) { return false; }\r\n    delete this.registeredWidgets[type];\r\n    this.setActiveWidgets();\r\n    return true;\r\n  }\n/**\n * @param {?=} unRegisterFrameworkWidgets\n * @return {?}\n */\nunRegisterAllWidgets(unRegisterFrameworkWidgets: boolean = true): boolean {\r\n    this.registeredWidgets = { };\r\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\r\n    this.setActiveWidgets();\r\n    return true;\r\n  }\n/**\n * @param {?} widgets\n * @return {?}\n */\nregisterFrameworkWidgets(widgets: any): boolean {\r\n    if (widgets === null || typeof widgets !== 'object') { return false; }\r\n    this.frameworkWidgets = widgets;\r\n    this.setActiveWidgets();\r\n    return true;\r\n  }\n/**\n * @return {?}\n */\nunRegisterFrameworkWidgets(): boolean {\r\n    if (Object.keys(this.frameworkWidgets).length) {\r\n      this.frameworkWidgets = { };\r\n      this.setActiveWidgets();\r\n    }\r\n    return true;\r\n  }\n/**\n * @param {?=} type\n * @param {?=} widgetSet\n * @return {?}\n */\ngetWidget(type?: string, widgetSet: string = 'activeWidgets'): any {\r\n    if (this.hasWidget(type, widgetSet)) {\r\n      return this[widgetSet][type];\r\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\r\n      return this[widgetSet][this.defaultWidget];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\n/**\n * @return {?}\n */\ngetAllWidgets(): any {\r\n    return {\r\n      widgetLibrary: this.widgetLibrary,\r\n      registeredWidgets: this.registeredWidgets,\r\n      frameworkWidgets: this.frameworkWidgets,\r\n      activeWidgets: this.activeWidgets,\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WidgetLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nWidgetLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWidgetLibraryService.ctorParameters;\n/** @type {?} */\nWidgetLibraryService.prototype.defaultWidget;\n/** @type {?} */\nWidgetLibraryService.prototype.widgetLibrary;\n/** @type {?} */\nWidgetLibraryService.prototype.registeredWidgets;\n/** @type {?} */\nWidgetLibraryService.prototype.frameworkWidgets;\n/** @type {?} */\nWidgetLibraryService.prototype.activeWidgets;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}