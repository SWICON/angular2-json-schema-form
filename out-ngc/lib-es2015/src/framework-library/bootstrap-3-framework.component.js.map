{"version":3,"sources":["../../../lib/src/framework-library/bootstrap-3-framework.component.ts"],"names":[],"mappings":"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","file":"bootstrap-3-framework.component.js","sourceRoot":"","sourcesContent":["import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\r\n\r\nimport * as _ from 'lodash/index';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\nimport { addClasses, inArray, JsonPointer, toTitleCase } from '../shared/index';\n/**\n * Bootstrap 3 framework for Angular JSON Schema Form.\r\n */\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\r\n  controlInitialized: boolean = false;\r\n  widgetOptions: any; // Options passed to child widget\r\n  layoutPointer: string;\r\n  widgetLayoutNode: any; // layoutNode passed to child widget\r\n  options: any; // Options used in this framework\r\n  formControl: any = null;\r\n  debugOutput: any = '';\r\n  debug: any = '';\r\n   formID: number;\r\n   layoutNode: any;\r\n   layoutIndex: number[];\r\n   dataIndex: number[];\n/**\n * @param {?} changeDetector\n * @param {?} jsf\n */\nconstructor(\npublic changeDetector: ChangeDetectorRef,\npublic jsf: JsonSchemaFormService\r\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\r\n    this.initializeControl();\r\n  }\n/**\n * @return {?}\n */\nngOnChanges() {\r\n    this.updateArrayItems();\r\n    if (!this.controlInitialized) { this.initializeControl(); }\r\n  }\n/**\n * @return {?}\n */\ninitializeControl() {\r\n    if (this.layoutNode) {\r\n      this.options = _.cloneDeep(this.layoutNode.options);\r\n      this.widgetLayoutNode = Object.assign(\r\n        {}, this.layoutNode, { options: _.cloneDeep(this.layoutNode.options) }\r\n      );\r\n      this.widgetOptions = this.widgetLayoutNode.options;\r\n      this.layoutPointer = this.jsf.getLayoutPointer(this);\r\n      this.formControl = this.jsf.getControl(this);\r\n      this.updateArrayItems();\r\n\r\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\r\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\r\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\r\n        'image', 'integer', 'month', 'number', 'password', 'radio',\r\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\r\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\r\n      ]);\r\n\r\n      this.options.title = this.setTitle();\r\n\r\n      this.options.htmlClass =\r\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\r\n      if (this.layoutNode.type === 'array') {\r\n        this.options.htmlClass =\r\n          addClasses(this.options.htmlClass, 'list-group');\r\n      } else if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\r\n        this.options.htmlClass =\r\n          addClasses(this.options.htmlClass, 'list-group-item');\r\n      } else {\r\n        this.options.htmlClass =\r\n          addClasses(this.options.htmlClass, 'form-group');\r\n      }\r\n      this.widgetOptions.htmlClass = '';\r\n      this.options.labelHtmlClass =\r\n        addClasses(this.options.labelHtmlClass, 'control-label');\r\n\r\n      this.widgetOptions.activeClass =\r\n        addClasses(this.widgetOptions.activeClass, 'active');\r\n\r\n      this.options.fieldAddonLeft =\r\n        this.options.fieldAddonLeft || this.options.prepend;\r\n\r\n      this.options.fieldAddonRight =\r\n        this.options.fieldAddonRight || this.options.append;\r\n\r\n      // Set miscelaneous styles and settings for each control type\r\n      switch (this.layoutNode.type) {\r\n        // Checkbox controls\r\n        case 'checkbox': case 'checkboxes':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'checkbox');\r\n        break;\r\n        case 'checkboxes-inline':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'checkbox');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\r\n        break;\r\n        // Radio controls\r\n        case 'radio': case 'radios':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'radio');\r\n        break;\r\n        case 'radios-inline':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'radio');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\r\n        break;\r\n        // Button sets - checkboxbuttons and radiobuttons\r\n        case 'checkboxbuttons': case 'radiobuttons':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'btn-group');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\r\n        break;\r\n        // Single button controls\r\n        case 'button': case 'submit':\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'btn');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\r\n        break;\r\n        // Containers - arrays and fieldsets\r\n        case 'array': case 'fieldset': case 'section': case 'conditional':\r\n        case 'advancedfieldset': case 'authfieldset':\r\n        case 'selectfieldset': case 'optionfieldset':\r\n          this.options.messageLocation = 'top';\r\n          if (this.options.title && this.options.required &&\r\n            this.options.title.indexOf('*') === -1\r\n          ) {\r\n            this.options.title += ' <strong class=\"text-danger\">*</strong>';\r\n          }\r\n        break;\r\n        case 'tabarray': case 'tabs':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'tab-content');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\r\n          this.widgetOptions.labelHtmlClass = addClasses(\r\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\r\n        break;\r\n        // 'Add' buttons - references\r\n        case '$ref':\r\n          this.widgetOptions.fieldHtmlClass =\r\n            addClasses(this.widgetOptions.fieldHtmlClass, 'btn pull-right');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\r\n          this.options.icon = 'glyphicon glyphicon-plus';\r\n        break;\r\n        // Default - including regular inputs\r\n        default:\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'form-control');\r\n      }\r\n\r\n      if (this.formControl) {\r\n        this.updateHelpBlock(this.formControl.status);\r\n        this.formControl.statusChanges.subscribe(value => this.updateHelpBlock(value));\r\n\r\n        if (this.options.debug) {\r\n          let /** @type {?} */ vars: any[] = [];\r\n          // vars.push(this.jsf.formGroup.value[this.options.name]);\r\n          // vars.push(this.jsf.formGroup.controls[this.options.name]['errors']);\r\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\r\n        }\r\n      }\r\n      this.controlInitialized = true;\r\n    }\r\n\r\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nupdateHelpBlock(value){\r\n    this.options.helpBlock = this.options.description|| this.options.help || false;\r\n    if (this.options.enableErrorState && value === 'INVALID' && this.formControl.errors &&\r\n      (this.formControl.dirty || this.options.feedbackOnRender)\r\n    ) {\r\n      this.options.helpBlock = Object.keys(this.formControl.errors).map(\r\n        error => [error, Object.keys(this.formControl.errors[error]).map(\r\n          errorParameter => errorParameter + ': ' +\r\n          this.formControl.errors[error][errorParameter]\r\n        ).join(', ')].filter(e => e).join(' - ')\r\n      ).join('<br>');\r\n\r\n    }\r\n  }\n/**\n * @return {?}\n */\nupdateArrayItems() {\r\n    if (this.layoutNode.arrayItem && this.options.removable &&\r\n      this.dataIndex && this.dataIndex.length\r\n    ) {\r\n      const /** @type {?} */ arrayIndex = this.dataIndex[this.dataIndex.length - 1];\r\n      const /** @type {?} */ parentArray =\r\n        JsonPointer.get(this.jsf.layout, this.layoutPointer, 0, -2);\r\n      if (parentArray && parentArray.items && parentArray.items.length >= 2) {\r\n        const /** @type {?} */ minItems = parentArray.minItems || 0;\r\n        const /** @type {?} */ lastArrayItem = parentArray.items.length - 2;\r\n        const /** @type {?} */ tupleItems = parentArray.tupleItems;\r\n        if (arrayIndex >= minItems && this.options.type !== '$ref' &&\r\n          (arrayIndex >= tupleItems || arrayIndex === lastArrayItem)\r\n        ) {\r\n          this.options.removable = true;\r\n        }\r\n      }\r\n    }\r\n  }\n/**\n * @return {?}\n */\nsetTitle(): string {\r\n    switch (this.layoutNode.type) {\r\n      case 'button':  case 'checkbox': case 'help':     case 'msg':\r\n      case 'message': case 'submit':   case 'tabarray': case '$ref':\r\n        return null;\r\n      case 'advancedfieldset':\r\n        this.widgetOptions.expandable = true;\r\n        this.widgetOptions.title = 'Advanced options';\r\n        return null;\r\n      case 'authfieldset':\r\n        this.widgetOptions.expandable = true;\r\n        this.widgetOptions.title = 'Authentication settings';\r\n        return null;\r\n      default:\r\n        let /** @type {?} */ thisTitle = this.options.title || (\r\n          isNaN(this.layoutNode.name) && this.layoutNode.name !== '-' ?\r\n          toTitleCase(this.layoutNode.name) : null\r\n        );\r\n        this.widgetOptions.title = null;\r\n        if (!thisTitle) { return null; }\r\n        if (thisTitle.indexOf('{') === -1 || !this.formControl || !this.dataIndex) {\r\n          return thisTitle;\r\n        }\r\n        return this.jsf.parseText(\r\n          thisTitle,\r\n          this.jsf.getControlValue(this),\r\n          this.jsf.getControlGroup(this).value,\r\n          this.dataIndex[this.dataIndex.length - 1]\r\n        );\r\n    }\r\n  }\n/**\n * @return {?}\n */\nremoveItem() {\r\n    this.jsf.removeItem(this);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'bootstrap-3-framework',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass\"\r\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\"\r\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\"\r\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\">\r\n\r\n      <button *ngIf=\"layoutNode?.arrayItem && options?.removable\"\r\n        class=\"close pull-right\"\r\n        style=\"position: relative; z-index: 20;\"\r\n        type=\"button\"\r\n        (click)=\"removeItem()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        <span class=\"sr-only\">Close</span>\r\n      </button>\r\n      <div *ngIf=\"options?.messageLocation === 'top'\">\r\n          <p *ngIf=\"options?.helpBlock\"\r\n          class=\"help-block\"\r\n          [innerHTML]=\"options?.helpBlock\"></p>\r\n      </div>\r\n\r\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass\"\r\n        [class.sr-only]=\"options?.notitle\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <strong *ngIf=\"options?.title && !options?.notitle && options?.required\"\r\n        class=\"text-danger\">*</strong>\r\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.globalOptions?.fieldsRequired\">\r\n        <strong class=\"text-danger\">*</strong> = required fields\r\n      </p>\r\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\r\n        <span *ngIf=\"options?.fieldAddonLeft\"\r\n          class=\"input-group-addon\"\r\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\r\n\r\n        <select-widget-widget\r\n          [formID]=\"formID\"\r\n          [layoutNode]=\"widgetLayoutNode\"\r\n          [dataIndex]=\"dataIndex\"\r\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\r\n\r\n        <span *ngIf=\"options?.fieldAddonRight\"\r\n          class=\"input-group-addon\"\r\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\r\n      </div>\r\n\r\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\r\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\r\n          (formControl?.dirty || options?.feedbackOnRender)\"\r\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\r\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\r\n        aria-hidden=\"true\"\r\n        class=\"form-control-feedback glyphicon\"></span>\r\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\r\n        <p *ngIf=\"options?.helpBlock\"\r\n          class=\"help-block\"\r\n          [innerHTML]=\"options?.helpBlock\"></p>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\r\n  `,\r\n  styles: [`\r\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\r\n    :host /deep/ .checkbox,\r\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\r\n    :host /deep/ .checkbox-inline,\r\n    :host /deep/ .checkbox-inline + .checkbox-inline,\r\n    :host /deep/ .checkbox-inline + .radio-inline,\r\n    :host /deep/ .radio-inline,\r\n    :host /deep/ .radio-inline + .radio-inline,\r\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\r\n    :host /deep/ .checkbox-inline:last-child,\r\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\r\n  `],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: JsonSchemaFormService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formID': [{ type: Input },],\n'layoutNode': [{ type: Input },],\n'layoutIndex': [{ type: Input },],\n'dataIndex': [{ type: Input },],\n};\n}\n\nfunction Bootstrap3FrameworkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBootstrap3FrameworkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBootstrap3FrameworkComponent.ctorParameters;\n/** @type {?} */\nBootstrap3FrameworkComponent.propDecorators;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.controlInitialized;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.widgetOptions;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.layoutPointer;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.widgetLayoutNode;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.options;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.formControl;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.debugOutput;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.debug;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.formID;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.layoutNode;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.layoutIndex;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.dataIndex;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.changeDetector;\n/** @type {?} */\nBootstrap3FrameworkComponent.prototype.jsf;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}