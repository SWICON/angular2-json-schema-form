{"version":3,"sources":["../../../../lib/src/framework-library/material-design-framework/material-button.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAc,MAAA,eAAA,CAAA;AAGlC,OAAO,EAAE,qBAAA,EAAsB,MAAA,gCAAA,CAAA;AAC/B,MAEC;IASD;;OAEG;IACH,YACY,GAAK;QAAL,QAAA,GAAA,GAAA,CAAK;QAXf,oBAAe,GAEY,KAAA,CAAM;QADjC,iBAAY,GAEY,KAAA,CAAM;IAS1B,CAAC;IACP;;OAEG;IACH,QAFG;QAGC,IAAI,CAFC,OAAC,GAAS,IAAA,CAAK,UAAC,CAAU,OAAC,IAAU,EAAA,CAAG;QAG7C,IAAI,CAFC,GAAC,CAAG,iBAAC,CAAiB,IAAC,CAAI,CAAC;IAGnC,CAAC;IACH;;;OAGG;IACH,WALG,CAAA,KAAA;QAMC,EAAE,CAAC,CAAC,OALO,IAAA,CAAK,OAAC,CAAO,OAAC,KAAW,UAAA,CAAW,CAAC,CAAA;YAM9C,IAAI,CALC,OAAC,CAAO,OAAC,CAAO,KAAC,CAAK,CAAC;QAM9B,CAAC;QALC,IAAA,CAAK,CAAA;YAML,IAAI,CALC,GAAC,CAAG,WAAC,CAAW,IAAC,EAAK,KAAA,CAAM,MAAC,CAAM,KAAC,CAAK,CAAC;QAMjD,CAAC;IACH,CAAC;;AAJI,kCAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAMvB,QAAQ,EALE,wBAAA;gBAMV,QAAQ,EALE;;;;;;;;;;;;;;;WAoBD;gBACP,MAAM,EALE,CAAA,8BAAE,CAA8B;aAM3C,EALC,EAAG;CAMJ,CALC;AAMF;;GAEG;AANF,sCAAA,GAAA,MAAA;IAQD,EAAC,IAAI,EAAE,qBAAqB,GAAG;CAC9B,CAbC;AAOK,sCAAA,GAAyD;IAQhE,QAAQ,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAQ3B,YAAY,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAQ/B,aAAa,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAQhC,WAAW,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAQ7B,CAPC;AAUF;IACA,gBAAgB;IAChB,uBAAuB,CAAC,UAAU,CAAC;IACnC;;;OAGG;IACH,uBAAuB,CAAC,cAAc,CAAC;IACvC,gBAAgB;IAChB,uBAAuB,CAAC,cAAc,CAAC;IACvC,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC9C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC9C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC/C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,eAAe,CAAC;IAClD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC/C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,OAAO,CAAC;IAC1C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,MAAM,CAAC;IACzC,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,UAAU,CAAC;IAC7C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC9C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC;IAC5C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,GAAG,CAAC;AACtC,CAAC","file":"material-button.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nexport class MaterialButtonComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled: boolean = false;\r\n  boundControl: boolean = false;\r\n  options: any;\r\n   formID: number;\r\n   layoutNode: any;\r\n   layoutIndex: number[];\r\n   dataIndex: number[];\n/**\n * @param {?} jsf\n */\nconstructor(\nprivate jsf: JsonSchemaFormService\r\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nupdateValue(event) {\r\n    if (typeof this.options.onClick === 'function') {\r\n      this.options.onClick(event);\r\n    } else {\r\n      this.jsf.updateValue(this, event.target.value);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'material-button-widget',\r\n  template: `\r\n    <div class=\"button-row\" [class]=\"options?.htmlClass\">\r\n      <button md-raised-button\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [color]=\"options?.color || 'primary'\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [type]=\"layoutNode?.type\"\r\n        [value]=\"controlValue\"\r\n        (click)=\"updateValue($event)\">\r\n        <md-icon *ngIf=\"options?.icon\" class=\"md-24\">{{options?.icon}}</md-icon>\r\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\r\n      </button>\r\n    </div>`,\r\n    styles: [`button { margin-top: 10px; }`],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JsonSchemaFormService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formID': [{ type: Input },],\n'layoutNode': [{ type: Input },],\n'layoutIndex': [{ type: Input },],\n'dataIndex': [{ type: Input },],\n};\n}\n\nfunction MaterialButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMaterialButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaterialButtonComponent.ctorParameters;\n/** @type {?} */\nMaterialButtonComponent.propDecorators;\n/** @type {?} */\nMaterialButtonComponent.prototype.formControl;\n/** @type {?} */\nMaterialButtonComponent.prototype.controlName;\n/** @type {?} */\nMaterialButtonComponent.prototype.controlValue;\n/** @type {?} */\nMaterialButtonComponent.prototype.controlDisabled;\n/** @type {?} */\nMaterialButtonComponent.prototype.boundControl;\n/** @type {?} */\nMaterialButtonComponent.prototype.options;\n/** @type {?} */\nMaterialButtonComponent.prototype.formID;\n/** @type {?} */\nMaterialButtonComponent.prototype.layoutNode;\n/** @type {?} */\nMaterialButtonComponent.prototype.layoutIndex;\n/** @type {?} */\nMaterialButtonComponent.prototype.dataIndex;\n/** @type {?} */\nMaterialButtonComponent.prototype.jsf;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}