{"version":3,"sources":["../../../lib/src/widget-library/select.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAc,MAAA,eAAA,CAAA;AAGlC,OAAO,EAAE,qBAAA,EAAsB,MAAA,6BAAA,CAAA;AAC/B,OAAO,EAAE,aAAA,EAAc,MAAA,iBAAA,CAAA;AACvB;IAYA;;OAEG;IACH,yBACY,GAAK;QAAL,QAAA,GAAA,GAAA,CAAK;QAZf,oBAAe,GAEY,KAAA,CAAM;QADjC,iBAAY,GAEY,KAAA,CAAM;QAA9B,eAAU,GAEU,EAAA,CAAG;IAQnB,CAAC;IACP;;OAEG;IACH,kCAFG,GAEH;QACI,IAAI,CAFC,OAAC,GAAS,IAAA,CAAK,UAAC,CAAU,OAAC,IAAU,EAAA,CAAG;QAG7C,IAAI,CAFC,UAAC,GAAY,aAAA,CAGhB,IAAI,CAFC,OAAC,CAAO,QAAC,IAAW,IAAA,CAAK,OAAC,CAAO,SAAC,EAGvC,IAAI,CAFC,OAAC,CAAO,IAAC,EAGd,CAAC,CAFC,IAAC,CAAI,OAAC,CAAO,QAAC,CAGjB,CAFC;QAGF,IAAI,CAFC,GAAC,CAAG,iBAAC,CAAiB,IAAC,CAAI,CAAC;IAGnC,CAAC;IACH;;;OAGG;IACH,qCALG,GAKH,UALG,KAAA;QAMC,IAAI,CALC,GAAC,CAAG,WAAC,CAAW,IAAC,EAAK,KAAA,CAAM,MAAC,CAAM,KAAC,CAAK,CAAC;IAMjD,CAAC;IAJI,0BAAA,GAAoC;QAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAMvB,QAAQ,EALE,eAAA;oBAMV,QAAQ,EALE,25BA0BD;iBACV,EALC,EAAG;KAMJ,CALC;IAMF;;OAEG;IANF,8BAAA,GAAA,cAAA,OAAA;QAQD,EAAC,IAAI,EAAE,qBAAqB,GAAG;KAC9B,EATA,CASA,CAbC;IAOK,8BAAA,GAAyD;QAQhE,QAAQ,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAQ3B,YAAY,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAQ/B,aAAa,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAQhC,WAAW,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAQ7B,CAPC;IAQF,sBAAC;CA5ED,AA4EC,IAAA;SA1EA,eAAA;AA4ED;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,YAAY,CAAC;IACvC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC;IAC1C,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,YAAY,CAAC;IACvC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC;IAClC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC;IACrC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC;IACrC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;IACpC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;AAC9B,CAAC","file":"select.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\nimport { buildTitleMap } from '../shared/index';\nexport class SelectComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled: boolean = false;\r\n  boundControl: boolean = false;\r\n  options: any;\r\n  selectList: any[] = [];\r\n   formID: number;\r\n   layoutNode: any;\r\n   layoutIndex: number[];\r\n   dataIndex: number[];\n/**\n * @param {?} jsf\n */\nconstructor(\nprivate jsf: JsonSchemaFormService\r\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.selectList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames,\r\n      this.options.enum,\r\n      !!this.options.required\r\n    );\r\n    this.jsf.initializeControl(this);\r\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nupdateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'select-widget',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass\">\r\n      <label *ngIf=\"options?.title\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <select\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        (input)=\"updateValue($event)\">\r\n        <option *ngFor=\"let selectItem of selectList\"\r\n           [value]=\"selectItem.value\"\r\n           [selected]=\"selectItem.value === controlValue\">{{selectItem.name}}</option>\r\n      </select>\r\n    </div>`,\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JsonSchemaFormService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formID': [{ type: Input },],\n'layoutNode': [{ type: Input },],\n'layoutIndex': [{ type: Input },],\n'dataIndex': [{ type: Input },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype.formControl;\n/** @type {?} */\nSelectComponent.prototype.controlName;\n/** @type {?} */\nSelectComponent.prototype.controlValue;\n/** @type {?} */\nSelectComponent.prototype.controlDisabled;\n/** @type {?} */\nSelectComponent.prototype.boundControl;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.selectList;\n/** @type {?} */\nSelectComponent.prototype.formID;\n/** @type {?} */\nSelectComponent.prototype.layoutNode;\n/** @type {?} */\nSelectComponent.prototype.layoutIndex;\n/** @type {?} */\nSelectComponent.prototype.dataIndex;\n/** @type {?} */\nSelectComponent.prototype.jsf;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}