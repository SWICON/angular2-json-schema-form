{"version":3,"sources":["../../../lib/src/widget-library/tab.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAc,MAAA,eAAA,CAAA;AAElC,OAAO,EAAE,qBAAA,EAAsB,MAAA,6BAAA,CAAA;AAC/B;IAMA;;OAEG;IACH,sBACY,GAAK;QAAL,QAAA,GAAA,GAAA,CAAK;IACX,CAAC;IACP;;OAEG;IACH,+BAFG,GAEH;QACI,IAAI,CAFC,OAAC,GAAS,IAAA,CAAK,UAAC,CAAU,OAAC,IAAU,EAAA,CAAG;IAG/C,CAAC;IADI,uBAAA,GAAoC;QAG3C,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAGvB,QAAQ,EAFE,YAAA;oBAGV,QAAQ,EAFE,gPAUD;iBACV,EAFC,EAAG;KAGJ,CAFC;IAGF;;OAEG;IAHF,2BAAA,GAAA,cAAA,OAAA;QAKD,EAAC,IAAI,EAAE,qBAAqB,GAAG;KAC9B,EANA,CAMA,CAAC;IAHK,2BAAA,GAAyD;QAKhE,QAAQ,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAK3B,YAbE,EASY,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAK/B,aAAa,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAKhC,WAAW,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAK7B,CAJC;IAKF,mBAAC;CA5CD,AA4CC,IAAA;SA1CA,YAAA;AA4CD;IACA,gBAAgB;IAChB,YAAY,CAAC,UAAU,CAAC;IACxB;;;OAGG;IACH,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;IAC/B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC;IAClC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC;IACnC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC;IACjC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC;AAC3B,CAAC","file":"tab.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nexport class TabComponent implements OnInit {\r\n  options: any;\r\n   formID: number;\r\n   layoutNode: any;\r\n   layoutIndex: number[];\r\n   dataIndex: number[];\n/**\n * @param {?} jsf\n */\nconstructor(\nprivate jsf: JsonSchemaFormService\r\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'tab-widget',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass\">\r\n      <root-widget\r\n        [formID]=\"formID\"\r\n        [layout]=\"layoutNode.items\"\r\n        [dataIndex]=\"dataIndex\"\r\n        [layoutIndex]=\"layoutIndex\"></root-widget>\r\n    </div>`,\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JsonSchemaFormService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formID': [{ type: Input },],\n'layoutNode': [{ type: Input },],\n'layoutIndex': [{ type: Input },],\n'dataIndex': [{ type: Input },],\n};\n}\n\nfunction TabComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabComponent.ctorParameters;\n/** @type {?} */\nTabComponent.propDecorators;\n/** @type {?} */\nTabComponent.prototype.options;\n/** @type {?} */\nTabComponent.prototype.formID;\n/** @type {?} */\nTabComponent.prototype.layoutNode;\n/** @type {?} */\nTabComponent.prototype.layoutIndex;\n/** @type {?} */\nTabComponent.prototype.dataIndex;\n/** @type {?} */\nTabComponent.prototype.jsf;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}