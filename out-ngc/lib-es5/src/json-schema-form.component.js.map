{"version":3,"sources":["../../lib/src/json-schema-form.component.ts"],"names":[],"mappings":"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","file":"json-schema-form.component.js","sourceRoot":"","sourcesContent":["import {\r\n  ChangeDetectionStrategy, Component, DoCheck, EventEmitter, Input, Output,\r\n  OnChanges, OnInit,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nimport * as _ from 'lodash/index';\r\n\r\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\r\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\r\nimport { JsonSchemaFormService } from './json-schema-form.service';\r\nimport { hasValue, isArray, isEmpty, isObject } from './shared/validator.functions';\r\nimport { hasOwn } from './shared/utility.functions';\r\nimport { JsonPointer } from './shared/jsonpointer.functions';\n/**\n * \\@module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n */\nexport class JsonSchemaFormComponent implements DoCheck, OnChanges, OnInit {\r\n  formID: number; // Unique ID for displayed form\r\n  debugOutput: any; // Debug information, if requested\r\n  formValueSubscription: any = null;\r\n  jsfObject: any;\r\n\r\n  // Recommended inputs\r\n   schema: any; // The JSON Schema\r\n   layout: any[]; // The form layout\r\n   data: any; // The data model\r\n   options: any; // The global form options\r\n   framework: string; // The framework to load\r\n   widgets: string; // Any custom widgets to load\r\n\r\n  // Alternate combined single input\r\n   form: any; // For testing, and JSON Schema Form API compatibility\r\n\r\n  // Angular Schema Form API compatibility inputs\r\n   model: any; // Alternate input for data model\r\n\r\n  // React JSON Schema Form API compatibility inputs\r\n   JSONSchema: any; // Alternate input for JSON Schema\r\n   UISchema: any; // UI schema - alternate form layout format\r\n   formData: any; // Alternate input for data model\r\n\r\n  // Development inputs, for testing and debugging\r\n   loadExternalAssets: boolean; // Load external framework assets?\r\n   debug: boolean; // Show debug information?\r\n\r\n  // Outputs\r\n   onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\r\n   onSubmit = new EventEmitter<any>(); // Complete validated form data\r\n   isValid = new EventEmitter<boolean>(); // Is current data valid?\r\n   validationErrors = new EventEmitter<any>(); // Validation errors (if any)\r\n   formSchema = new EventEmitter<any>(); // Final schema used to create form\r\n   formLayout = new EventEmitter<any>();\n/**\n * @param {?} frameworkLibrary\n * @param {?} widgetLibrary\n * @param {?} jsf\n * @param {?} sanitizer\n */\nconstructor(\nprivate frameworkLibrary: FrameworkLibraryService,\nprivate widgetLibrary: WidgetLibraryService,\nprivate jsf: JsonSchemaFormService,\nprivate sanitizer: DomSanitizer\r\n  ) {\r\n    this.jsfObject = jsf;\r\n  }\n/**\n * @return {?}\n */\nngOnInit() { }\n/**\n * @return {?}\n */\nngOnChanges() {\r\n    this.initializeForm();\r\n  }\n/**\n * @return {?}\n */\nget stylesheets(): SafeResourceUrl[] {\r\n    const /** @type {?} */ load = this.sanitizer.bypassSecurityTrustResourceUrl;\r\n    return this.frameworkLibrary.getFrameworkStylesheets()\r\n      .map(stylesheet => load(stylesheet));\r\n  }\n/**\n * @return {?}\n */\nget scripts(): SafeResourceUrl[] {\r\n    const /** @type {?} */ load = this.sanitizer.bypassSecurityTrustResourceUrl;\r\n    return this.frameworkLibrary.getFrameworkStylesheets()\r\n      .map(script => load(script));\r\n  }\n/**\n * 'initializeForm' function\r\r- Update 'schema', 'layout', and 'initialValues', from inputs.\r\r- Create 'dataMap' to map the data to the schema and template.\r\r- Create 'schemaRefLibrary' to resolve schema $ref links.\r\r- Create 'layoutRefLibrary' to use when dynamically adding\r  form components to arrays and recursive $ref points.\r\r- Create 'formGroupTemplate', then from it 'formGroup',\r  the Angular formGroup used to control the reactive form.\r\r\\@return {void}\n * @return {?}\n */\npublic initializeForm(): void {\r\n    if (\r\n      this.schema || this.layout || this.data ||\r\n      this.form || this.JSONSchema || this.UISchema\r\n    ) {\r\n      // Reset all form values to defaults\r\n      this.jsf.resetAllValues();\r\n\r\n      // Initialize 'options' (global form options) and set framework\r\n      // Combine available inputs:\r\n      // 1. options - recommended\r\n      // 2. form.options - Single input style\r\n      this.jsf.setOptions({ debug: !!this.debug });\r\n      let /** @type {?} */ loadExternalAssets: boolean = this.loadExternalAssets || false;\r\n      let /** @type {?} */ framework: any = this.framework || 'default';\r\n      if (isObject(this.options)) {\r\n        this.jsf.setOptions(this.options);\r\n        loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\r\n        framework = this.options.framework || framework;\r\n      }\r\n      if (isObject(this.form) && isObject(this.form.options)) {\r\n        this.jsf.setOptions(this.form.options);\r\n        loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\r\n        framework = this.form.options.framework || framework;\r\n      }\r\n      if (isObject(this.widgets)) {\r\n        this.jsf.setOptions({ widgets: this.widgets });\r\n      }\r\n      this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\r\n      this.frameworkLibrary.setFramework(framework);\r\n      this.jsf.framework = this.frameworkLibrary.getFramework();\r\n      if (isObject(this.jsf.globalOptions.widgets)) {\r\n        for (let /** @type {?} */ widget of Object.keys(this.jsf.globalOptions.widgets)) {\r\n          this.widgetLibrary.registerWidget(widget, this.jsf.globalOptions.widgets[widget]);\r\n        }\r\n      }\r\n      if (isObject(this.form) && isObject(this.form.tpldata)) {\r\n        this.jsf.setTpldata(this.form.tpldata);\r\n      }\r\n\r\n      // Initialize 'schema'\r\n      // Use first available input:\r\n      // 1. schema - recommended / Angular Schema Form style\r\n      // 2. form.schema - Single input / JSON Form style\r\n      // 3. JSONSchema - React JSON Schema Form style\r\n      // 4. form.JSONSchema - For testing single input React JSON Schema Forms\r\n      // 5. form - For testing single schema-only inputs\r\n      // TODO: 6. (none) no schema - construct form entirely from layout instead\r\n      if (isObject(this.schema)) {\r\n        this.jsf.AngularSchemaFormCompatibility = true;\r\n        this.jsf.schema = _.cloneDeep(this.schema);\r\n      } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\r\n        this.jsf.schema = _.cloneDeep(this.form.schema);\r\n      } else if (isObject(this.JSONSchema)) {\r\n        this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n        this.jsf.schema = _.cloneDeep(this.JSONSchema);\r\n      } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\r\n        this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n        this.jsf.schema = _.cloneDeep(this.form.JSONSchema);\r\n      } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\r\n        this.jsf.schema = _.cloneDeep(this.form);\r\n      }\r\n\r\n      if (!isEmpty(this.jsf.schema)) {\r\n\r\n        // Allow for JSON schema shorthand (JSON Form style)\r\n        if (!hasOwn(this.jsf.schema, 'type') &&\r\n          hasOwn(this.jsf.schema, 'properties') &&\r\n          isObject(this.jsf.schema.properties)\r\n        ) {\r\n          this.jsf.schema.type = 'object';\r\n        } else if (!hasOwn(this.jsf.schema, 'type') ||\r\n          this.jsf.schema.type !== 'object' ||\r\n          !hasOwn(this.jsf.schema, 'properties')\r\n        ) {\r\n          this.jsf.JsonFormCompatibility = true;\r\n          this.jsf.schema = { 'type': 'object', 'properties': this.jsf.schema };\r\n        }\r\n\r\n        // Convert JSON Schemas version 3 (JSON Form style)\r\n        // or version 4 (Angular Schema Form style) to version 6\r\n        this.jsf.convertJsonSchemaToDraft6();\r\n\r\n        // Initialize ajv and compile schema\r\n        this.jsf.compileAjvSchema();\r\n\r\n        // Resolve all schema $ref links\r\n        this.jsf.resolveSchemaRefLinks();\r\n      }\r\n\r\n      // Initialize 'layout'\r\n      // Use first available array input:\r\n      // 1. layout - recommended\r\n      // 2. form - Angular Schema Form style\r\n      // 3. form.form - JSON Form style\r\n      // 4. form.layout - Single input style\r\n      // 5. (none) no input - use default layout instead\r\n      if (isArray(this.layout)) {\r\n        this.jsf.layout = _.cloneDeep(this.layout);\r\n      } else if (isArray(this.form)) {\r\n        this.jsf.AngularSchemaFormCompatibility = true;\r\n        this.jsf.layout = _.cloneDeep(this.form);\r\n      } else if (this.form && isArray(this.form.form)) {\r\n        this.jsf.JsonFormCompatibility = true;\r\n        this.jsf.layout =\r\n          this.jsf.fixJsonFormOptions(_.cloneDeep(this.form.form));\r\n      } else if (this.form && isArray(this.form.layout)) {\r\n        this.jsf.layout = _.cloneDeep(this.form.layout);\r\n      } else {\r\n        this.jsf.layout =\r\n          this.jsf.globalOptions.addSubmit === false ?\r\n          [ '*' ] :\r\n          [ '*', { type: 'submit', title: 'Submit' } ];\r\n      }\r\n\r\n      // Import alternate layout formats 'UISchema' or 'customFormItems'\r\n      // used for React JSON Schema Form and JSON Form API compatibility\r\n      // Use first available input:\r\n      // 1. UISchema - React JSON Schema Form style\r\n      // 2. form.UISchema - For testing single input React JSON Schema Forms\r\n      // 2. form.customFormItems - JSON Form style\r\n      // 3. (none) no input - don't import\r\n      let /** @type {?} */ alternateLayout: any = null;\r\n      if (isObject(this.UISchema)) {\r\n        this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n        alternateLayout = _.cloneDeep(this.UISchema);\r\n      } else if (hasOwn(this.form, 'UISchema')) {\r\n        this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n        alternateLayout = _.cloneDeep(this.form.UISchema);\r\n      } else if (hasOwn(this.form, 'customFormItems')) {\r\n        this.jsf.JsonFormCompatibility = true;\r\n        alternateLayout =\r\n          this.jsf.fixJsonFormOptions(_.cloneDeep(this.form.customFormItems));\r\n      }\r\n\r\n      // if alternate layout found, copy options into schema\r\n      if (alternateLayout) {\r\n        JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\r\n          const /** @type {?} */ schemaPointer: string = pointer.replace(/\\//g, '/properties/')\r\n            .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\r\n            .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\r\n          if (hasValue(value) && hasValue(pointer)) {\r\n            const /** @type {?} */ groupPointer: string[] =\r\n              JsonPointer.parse(schemaPointer).slice(0, -2);\r\n            let /** @type {?} */ key = JsonPointer.toKey(schemaPointer);\r\n            let /** @type {?} */ itemPointer: string | string[];\r\n            // If 'ui:order' object found, copy into schema root\r\n            if (key === 'ui:order') {\r\n              itemPointer = schemaPointer;\r\n            // Copy other alternate layout options to schema 'x-schema-form',\r\n            // (like Angular Schema Form options) and remove any 'ui:' prefixes\r\n            } else {\r\n              itemPointer = groupPointer.concat(['x-schema-form',\r\n                key.slice(0, 3) === 'ui:' ? key.slice(3) : key\r\n              ]);\r\n            }\r\n            if (JsonPointer.has(this.jsf.schema, groupPointer) &&\r\n              !JsonPointer.has(this.jsf.schema, itemPointer)\r\n            ) {\r\n              JsonPointer.set(this.jsf.schema, itemPointer, value);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // Initialize 'initialValues'\r\n      // Use first available input:\r\n      // 1. data - recommended\r\n      // 2. model - Angular Schema Form style\r\n      // 3. form.value - JSON Form style\r\n      // 4. form.data - Single input style\r\n      // 5. formData - React JSON Schema Form style\r\n      // 6. form.formData - For easier testing of React JSON Schema Forms\r\n      // 7. (none) no data - initialize data from schema and layout defaults only\r\n      if (isObject(this.data)) {\r\n        this.jsf.initialValues = _.cloneDeep(this.data);\r\n      } else if (isObject(this.model)) {\r\n        this.jsf.AngularSchemaFormCompatibility = true;\r\n        this.jsf.initialValues = _.cloneDeep(this.model);\r\n      } else if (isObject(this.form) && isObject(this.form.value)) {\r\n        this.jsf.JsonFormCompatibility = true;\r\n        this.jsf.initialValues = _.cloneDeep(this.form.value);\r\n      } else if (isObject(this.form) && isObject(this.form.data)) {\r\n        this.jsf.initialValues = _.cloneDeep(this.form.data);\r\n      } else if (isObject(this.formData)) {\r\n        this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n        this.jsf.initialValues = _.cloneDeep(this.formData);\r\n      } else if (hasOwn(this.form, 'formData') && isObject(this.form.formData)) {\r\n        this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n        this.jsf.initialValues = _.cloneDeep(this.form.formData);\r\n      }\r\n\r\n      if (isEmpty(this.jsf.schema)) {\r\n\r\n        // TODO: If layout, but no schema, build schema from layout\r\n        if (this.jsf.layout.indexOf('*') === -1) {\r\n          this.jsf.buildSchemaFromLayout();\r\n\r\n        // If no schema and no layout, build schema from data\r\n        } else if (!isEmpty(this.jsf.initialValues)) {\r\n          this.jsf.buildSchemaFromData();\r\n        }\r\n      }\r\n\r\n      if (!isEmpty(this.jsf.schema)) {\r\n\r\n        // If not already initialized, initialize ajv and compile schema\r\n        this.jsf.compileAjvSchema();\r\n\r\n        // Build the Angular FormGroup template from the schema\r\n        this.jsf.buildFormGroupTemplate();\r\n\r\n        // Update all layout elements, add values, widgets, and validators,\r\n        // replace any '*' with a layout built from all schema elements,\r\n        // and update the FormGroup template with any new validators\r\n        this.jsf.buildLayout(this.widgetLibrary);\r\n\r\n        // Build the real Angular FormGroup from the FormGroup template\r\n        this.jsf.buildFormGroup();\r\n      }\r\n\r\n      if (this.jsf.formGroup) {\r\n\r\n        // // Calculate references to other fields\r\n        // if (!isEmpty(this.jsf.formGroup.value)) {\r\n        //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\r\n        //     if (typeof value === 'string') {\r\n        //       object[key] = this.jsf.parseText(value, value, rootObject, key);\r\n        //     }\r\n        //   }, 'top-down');\r\n        // }\r\n        // // TODO: Figure out how to display calculated values without changing object data\r\n        // // See http://ulion.github.io/jsonform/playground/?example=templating-values\r\n\r\n        // TODO: (re-)render the form\r\n\r\n        // Subscribe to form changes to output live data, validation, and errors\r\n        this.jsf.dataChanges.subscribe(data => this.onChanges.emit(data));\r\n        this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\r\n        this.jsf.validationErrorChanges.subscribe(errors => this.validationErrors.emit(errors));\r\n\r\n        // Output final schema, final layout, and initial data\r\n        this.formSchema.emit(this.jsf.schema);\r\n        this.formLayout.emit(this.jsf.layout);\r\n        this.onChanges.emit(this.jsf.data);\r\n\r\n        // If 'validateOnRender' = true, output initial validation and any errors\r\n        if (JsonPointer.get(this.jsf, '/globalOptions/validateOnRender')) {\r\n          this.isValid.emit(this.jsf.isValid);\r\n          this.validationErrors.emit(this.jsf.validationErrors);\r\n        }\r\n\r\n// Uncomment individual lines to output debugging information to console:\r\n// (These always work.)\r\n// console.log('loading form...');\r\n// console.log(this.jsf.schema);\r\n// console.log(this.jsf.layout);\r\n// console.log(this.options);\r\n// console.log(this.jsf.initialValues);\r\n// console.log(this.jsf.formGroup.value);\r\n// console.log(this.jsf.formGroupTemplate);\r\n// console.log(this.jsf.formGroup);\r\n// console.log(this.jsf.schemaRefLibrary);\r\n// console.log(this.jsf.layoutRefLibrary);\r\n// console.log(this.jsf.templateRefLibrary);\r\n// console.log(this.jsf.dataMap);\r\n// console.log(this.jsf.arrayMap);\r\n// console.log(this.jsf.schemaRecursiveRefMap);\r\n// console.log(this.jsf.dataRecursiveRefMap);\r\n      } else {\r\n        // TODO: Display error message\r\n      }\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\r\n    if (this.debug || this.jsf.globalOptions.debug) {\r\n      const /** @type {?} */ vars: any[] = [];\r\n      // vars.push(this.jsf.schema);\r\n      // vars.push(this.jsf.layout);\r\n      // vars.push(this.jsf.initialValues);\r\n      // vars.push(this.jsf.formGroup.value);\r\n      // vars.push(this.jsf.formGroupTemplate);\r\n      // vars.push(this.jsf.formGroup);\r\n      // vars.push(this.jsf.schemaRefLibrary);\r\n      // vars.push(this.jsf.layoutRefLibrary);\r\n      // vars.push(this.jsf.templateRefLibrary);\r\n      // vars.push(this.jsf.dataMap);\r\n      // vars.push(this.jsf.arrayMap);\r\n      // vars.push(this.jsf.schemaRecursiveRefMap);\r\n      // vars.push(this.jsf.dataRecursiveRefMap);\r\n      this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\r\n    }\r\n  }\n/**\n * @return {?}\n */\nsubmitForm() {\r\n    this.onSubmit.emit(this.jsf.validData);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'json-schema-form',\r\n  template: `\r\n    <div *ngFor=\"let stylesheet of stylesheets\">\r\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\r\n    </div>\r\n    <div *ngFor=\"let script of scripts\">\r\n      <script type=\"text/javascript\" [src]=\"script\"></script>\r\n    </div>\r\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\r\n      <root-widget [formID]=\"formID\" [layout]=\"jsfObject.layout\" [data]=\"jsfObject.data\"></root-widget>\r\n    </form>\r\n    <div *ngIf=\"debug || jsfObject.globalOptions.debug\">\r\n      Debug output: <pre>{{debugOutput}}</pre>\r\n    </div>`,\r\n  providers: [ JsonSchemaFormService ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameworkLibraryService, },\n{type: WidgetLibraryService, },\n{type: JsonSchemaFormService, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'schema': [{ type: Input },],\n'layout': [{ type: Input },],\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'framework': [{ type: Input },],\n'widgets': [{ type: Input },],\n'form': [{ type: Input },],\n'model': [{ type: Input },],\n'JSONSchema': [{ type: Input },],\n'UISchema': [{ type: Input },],\n'formData': [{ type: Input },],\n'loadExternalAssets': [{ type: Input },],\n'debug': [{ type: Input },],\n'onChanges': [{ type: Output },],\n'onSubmit': [{ type: Output },],\n'isValid': [{ type: Output },],\n'validationErrors': [{ type: Output },],\n'formSchema': [{ type: Output },],\n'formLayout': [{ type: Output },],\n};\n}\n\nfunction JsonSchemaFormComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonSchemaFormComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonSchemaFormComponent.ctorParameters;\n/** @type {?} */\nJsonSchemaFormComponent.propDecorators;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.formID;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.debugOutput;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.formValueSubscription;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.jsfObject;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.schema;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.layout;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.data;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.options;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.framework;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.widgets;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.form;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.model;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.JSONSchema;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.UISchema;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.formData;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.loadExternalAssets;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.debug;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.onChanges;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.onSubmit;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.isValid;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.validationErrors;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.formSchema;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.formLayout;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.frameworkLibrary;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.widgetLibrary;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.jsf;\n/** @type {?} */\nJsonSchemaFormComponent.prototype.sanitizer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}