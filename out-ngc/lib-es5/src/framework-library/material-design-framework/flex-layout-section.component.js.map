{"version":3,"sources":["../../../../lib/src/framework-library/material-design-framework/flex-layout-section.component.ts"],"names":[],"mappings":"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","file":"flex-layout-section.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nexport class FlexLayoutSectionComponent implements OnInit {\r\n  options: any;\r\n  expanded: boolean = true;\r\n  containerType: string;\r\n   formID: number;\r\n   layoutNode: any;\r\n   layoutIndex: number[];\r\n   dataIndex: number[];\n/**\n * @return {?}\n */\nngOnInit() {\r\nconsole.log(this.layoutNode.type);\r\n    switch (this.layoutNode.type) {\r\n      case 'fieldset': case 'advancedfieldset': case 'authfieldset':\r\n      case 'optionfieldset': case 'selectfieldset':\r\n        this.containerType = 'fieldset';\r\n      break;\r\n      default: // 'div', 'section', 'flex', 'array', 'tab', 'conditional', 'actions', 'tagsinput'\r\n        this.containerType = 'div';\r\n      break;\r\n    }\r\n    this.options = this.layoutNode.options || {};\r\n    this.expanded = !this.options.expandable;\r\n  }\n/**\n * @return {?}\n */\nlegendDisplay(): string {\r\n    return this.options.notitle || !this.options.title ? 'none' : '';\r\n  }\n/**\n * @return {?}\n */\nexpand() {\r\n    if (this.options.expandable) { this.expanded = !this.expanded; }\r\n  }\n/**\n * @param {?} attribute\n * @return {?}\n */\ngetFlexAttribute(attribute: string) {\r\n    const /** @type {?} */ flexActive: boolean =\r\n      this.layoutNode.type === 'flex' ||\r\n      !!this.options.displayFlex ||\r\n      this.options.display === 'flex';\r\n    if (attribute !== 'flex' && !flexActive) { return null; }\r\n    switch (attribute) {\r\n      case 'is-flex':\r\n        return flexActive;\r\n      case 'display':\r\n        return flexActive ? 'flex' : 'initial';\r\n      case 'flex-direction': case 'flex-wrap':\r\n        const /** @type {?} */ index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\r\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\r\n          this.options[attribute] || ['row', 'nowrap'][index];\r\n      case 'justify-content': case 'align-items': case 'align-content':\r\n        return this.options[attribute];\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'flex-layout-section-widget',\r\n  template: `\r\n    <div *ngIf=\"containerType === 'div'\"\r\n      [class]=\"options?.htmlClass\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\">\r\n      <label *ngIf=\"options?.title\"\r\n        [class]=\"options?.labelHtmlClass\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"\r\n        (click)=\"expand()\"></label>\r\n\r\n        <flex-layout-root-widget\r\n          *ngIf=\"expanded\"\r\n          [formID]=\"formID\"\r\n          [layout]=\"layoutNode.items\"\r\n          [dataIndex]=\"dataIndex\"\r\n          [layoutIndex]=\"layoutIndex\"\r\n          [isOrderable]=\"options?.orderable\"\r\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n          [style.display]=\"getFlexAttribute('display')\"\r\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\r\n          [style.align-items]=\"getFlexAttribute('align-items')\"\r\n          [style.align-content]=\"getFlexAttribute('align-content')\"\r\n          [fxLayout]=\"options.fxLayout\"\r\n          [fxLayoutWrap]=\"options.fxLayoutWrap\"\r\n          [fxLayoutGap]=\"options.fxLayoutGap\"\r\n          [fxLayoutAlign]=\"options.fxLayoutAlign\"\r\n          [attr.fxFlexFill]=\"options.fxLayoutAlign\"></flex-layout-root-widget>\r\n\r\n    </div>\r\n\r\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\r\n      [class]=\"options?.htmlClass\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\"\r\n      [disabled]=\"options?.readonly\">\r\n      <legend\r\n        [class]=\"options?.labelHtmlClass\"\r\n        [style.display]=\"legendDisplay()\"\r\n        [innerHTML]=\"options?.title\"\r\n        (click)=\"expand()\"></legend>\r\n\r\n        <flex-layout-root-widget\r\n          *ngIf=\"expanded\"\r\n          [formID]=\"formID\"\r\n          [layout]=\"layoutNode.items\"\r\n          [dataIndex]=\"dataIndex\"\r\n          [layoutIndex]=\"layoutIndex\"\r\n          [isOrderable]=\"options?.orderable\"\r\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n          [style.display]=\"getFlexAttribute('display')\"\r\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\r\n          [style.align-items]=\"getFlexAttribute('align-items')\"\r\n          [style.align-content]=\"getFlexAttribute('align-content')\"\r\n          [fxLayout]=\"options.fxLayout\"\r\n          [fxLayoutWrap]=\"options.fxLayoutWrap\"\r\n          [fxLayoutGap]=\"options.fxLayoutGap\"\r\n          [fxLayoutAlign]=\"options.fxLayoutAlign\"\r\n          [attr.fxFlexFill]=\"options.fxLayoutAlign\"></flex-layout-root-widget>\r\n\r\n    </fieldset>`,\r\n  styles: [`\r\n    .expandable > legend:before { content: '▶'; padding-right: .3em; }\r\n    .expanded > legend:before { content: '▼'; padding-right: .2em; }\r\n  `],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formID': [{ type: Input },],\n'layoutNode': [{ type: Input },],\n'layoutIndex': [{ type: Input },],\n'dataIndex': [{ type: Input },],\n};\n}\n\nfunction FlexLayoutSectionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlexLayoutSectionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlexLayoutSectionComponent.ctorParameters;\n/** @type {?} */\nFlexLayoutSectionComponent.propDecorators;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.options;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.expanded;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.containerType;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.formID;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.layoutNode;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.layoutIndex;\n/** @type {?} */\nFlexLayoutSectionComponent.prototype.dataIndex;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}